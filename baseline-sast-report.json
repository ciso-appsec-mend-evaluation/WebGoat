{
    "vulnerabilities": [
        {
            "category": "sast",
            "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/resources/lessons/xxe/js/xxe.js",
                "start_line": 75,
                "end_line": 77
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-74",
                    "value": "74",
                    "url": "https://cwe.mitre.org/data/definitions/74.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/resources/lessons/xss/js/stored-xss.js",
                "start_line": 37,
                "end_line": 39
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-74",
                    "value": "74",
                    "url": "https://cwe.mitre.org/data/definitions/74.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/resources/lessons/sql_injection/js/assignment13.js",
                "start_line": 46
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-74",
                    "value": "74",
                    "url": "https://cwe.mitre.org/data/definitions/74.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/resources/lessons/sql_injection/js/assignment13.js",
                "start_line": 51,
                "end_line": 56
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-74",
                    "value": "74",
                    "url": "https://cwe.mitre.org/data/definitions/74.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/resources/lessons/jwt/js/jwt-voting.js",
                "start_line": 45
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-74",
                    "value": "74",
                    "url": "https://cwe.mitre.org/data/definitions/74.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/resources/lessons/jwt/js/jwt-voting.js",
                "start_line": 53,
                "end_line": 56
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-74",
                    "value": "74",
                    "url": "https://cwe.mitre.org/data/definitions/74.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "This usage of java/lang/Runtime.exec(Ljava/lang/String;)Ljava/lang/Process; can be vulnerable to Command Injection",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/dummy/insecure/framework/VulnerableTaskHolder.java",
                "start_line": 60
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-78",
                    "value": "78",
                    "url": "https://cwe.mitre.org/data/definitions/78.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "xss",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/resources/lessons/csrf/js/csrf-review.js",
                "start_line": 37,
                "end_line": 41
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-74",
                    "value": "74",
                    "url": "https://cwe.mitre.org/data/definitions/74.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution.",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/resources/lessons/client_side_filtering/js/clientSideFiltering.js",
                "start_line": 27,
                "end_line": 32
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-74",
                    "value": "74",
                    "url": "https://cwe.mitre.org/data/definitions/74.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "Cross Site Scripting",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/resources/lessons/client_side_filtering/js/clientSideFiltering.js",
                "start_line": 6,
                "end_line": 6
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-74",
                    "value": "74",
                    "url": "https://cwe.mitre.org/data/definitions/74.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "Cross Site Scripting",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/resources/lessons/challenges/js/challenge8.js",
                "start_line": 18
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-74",
                    "value": "74",
                    "url": "https://cwe.mitre.org/data/definitions/74.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "Cryptographic keys should not be kept in the source code. The source code can be widely shared\nin an enterprise environment, and is certainly shared in open source. To be managed safely,\npasswords and secret keys should be stored in separate configuration files or keystores.\n",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/xxe/User.java",
                "start_line": 31
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-321",
                    "value": "321",
                    "url": "https://cwe.mitre.org/data/definitions/321.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "Unrestricted Spring's RequestMapping makes the method vulnerable to CSRF attacks",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/xxe/SimpleXXE.java",
                "start_line": 94
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-352",
                    "value": "352",
                    "url": "https://cwe.mitre.org/data/definitions/352.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "This API (java/io/File.\u003cinit\u003e(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/xxe/BlindSendFileAssignment.java",
                "start_line": 67
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-22",
                    "value": "22",
                    "url": "https://cwe.mitre.org/data/definitions/22.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "The XML parsing is vulnerable to XML External Entity attacks",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/xxe/CommentsCache.java",
                "start_line": 102
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-611",
                    "value": "611",
                    "url": "https://cwe.mitre.org/data/definitions/611.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "This API (java/io/File.\u003cinit\u003e(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/xxe/Ping.java",
                "start_line": 52
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-22",
                    "value": "22",
                    "url": "https://cwe.mitre.org/data/definitions/22.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "This use of org/slf4j/Logger.debug(Ljava/lang/String;)V might be used to include CRLF characters into log messages",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/xxe/Ping.java",
                "start_line": 50
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-117",
                    "value": "117",
                    "url": "https://cwe.mitre.org/data/definitions/117.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "This API (java/io/File.\u003cinit\u003e(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/xxe/Ping.java",
                "start_line": 52
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-22",
                    "value": "22",
                    "url": "https://cwe.mitre.org/data/definitions/22.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "Cross Site Scripting",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/resources/lessons/xss/js/stored-xss.js",
                "start_line": 37,
                "end_line": 40
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-74",
                    "value": "74",
                    "url": "https://cwe.mitre.org/data/definitions/74.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "The method identified is susceptible to injection. The input should be validated and properly\nescaped.\n",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/sql_injection/advanced/SqlInjectionChallenge.java",
                "start_line": 63
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-89",
                    "value": "89",
                    "url": "https://cwe.mitre.org/data/definitions/89.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "The method identified is susceptible to injection. The input should be validated and properly\nescaped.\n",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/sql_injection/advanced/SqlInjectionLesson6a.java",
                "start_line": 60,
                "end_line": 67
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-89",
                    "value": "89",
                    "url": "https://cwe.mitre.org/data/definitions/89.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "The method identified is susceptible to injection. The input should be validated and properly\nescaped.\n",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/sql_injection/advanced/SqlInjectionLesson6b.java",
                "start_line": 63,
                "end_line": 67
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-89",
                    "value": "89",
                    "url": "https://cwe.mitre.org/data/definitions/89.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "Cryptographic keys should not be kept in the source code. The source code can be widely shared\nin an enterprise environment, and is certainly shared in open source. To be managed safely,\npasswords and secret keys should be stored in separate configuration files or keystores.\n",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/sql_injection/advanced/SqlInjectionLesson6b.java",
                "start_line": 61
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-798",
                    "value": "798",
                    "url": "https://cwe.mitre.org/data/definitions/798.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "The sensitive information may be valuable information on its own (such as a password), or it\nmay be useful for launching other, more deadly attacks. If an attack fails, an attacker may use\nerror information provided by the server to launch another more focused attack. For example, an\nattempt to exploit a path traversal weakness (CWE-22) might yield the full pathname of the\ninstalled application.\n",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/sql_injection/advanced/SqlInjectionLesson6b.java",
                "start_line": 72,
                "end_line": 75
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-209",
                    "value": "209",
                    "url": "https://cwe.mitre.org/data/definitions/209.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "The input values included in SQL queries need to be passed in safely. Bind\nvariables in prepared statements can be used to easily mitigate the risk of\nSQL injection.\n",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/sql_injection/introduction/SqlInjectionLesson10.java",
                "start_line": 58,
                "end_line": 63
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-89",
                    "value": "89",
                    "url": "https://cwe.mitre.org/data/definitions/89.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "The input values included in SQL queries need to be passed in safely. Bind\nvariables in prepared statements can be used to easily mitigate the risk of\nSQL injection.\n",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/sql_injection/introduction/SqlInjectionLesson2.java",
                "start_line": 62
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-89",
                    "value": "89",
                    "url": "https://cwe.mitre.org/data/definitions/89.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "The input values included in SQL queries need to be passed in safely. Bind\nvariables in prepared statements can be used to easily mitigate the risk of\nSQL injection.\n",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/sql_injection/introduction/SqlInjectionLesson3.java",
                "start_line": 65
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-89",
                    "value": "89",
                    "url": "https://cwe.mitre.org/data/definitions/89.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "The input values included in SQL queries need to be passed in safely. Bind\nvariables in prepared statements can be used to easily mitigate the risk of\nSQL injection.\n",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/sql_injection/introduction/SqlInjectionLesson4.java",
                "start_line": 63
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-89",
                    "value": "89",
                    "url": "https://cwe.mitre.org/data/definitions/89.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "The input values included in SQL queries need to be passed in safely. Bind\nvariables in prepared statements can be used to easily mitigate the risk of\nSQL injection.\n",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/sql_injection/introduction/SqlInjectionLesson5.java",
                "start_line": 73
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-89",
                    "value": "89",
                    "url": "https://cwe.mitre.org/data/definitions/89.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "The input values included in SQL queries need to be passed in safely. Bind\nvariables in prepared statements can be used to easily mitigate the risk of\nSQL injection.\n",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/sql_injection/introduction/SqlInjectionLesson5a.java",
                "start_line": 60,
                "end_line": 62
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-89",
                    "value": "89",
                    "url": "https://cwe.mitre.org/data/definitions/89.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "The input values included in SQL queries need to be passed in safely. Bind\nvariables in prepared statements can be used to easily mitigate the risk of\nSQL injection.\n",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/sql_injection/introduction/SqlInjectionLesson5b.java",
                "line_start": 56,
                "line_end": 71
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-89",
                    "value": "89",
                    "url": "https://cwe.mitre.org/data/definitions/89.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "The input values included in SQL queries need to be passed in safely. Bind\nvariables in prepared statements can be used to easily mitigate the risk of\nSQL injection.\n",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/sql_injection/introduction/SqlInjectionLesson8.java",
                "line_start": 60,
                "line_end": 66
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-89",
                    "value": "89",
                    "url": "https://cwe.mitre.org/data/definitions/89.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "The input values included in SQL queries need to be passed in safely. Bind\nvariables in prepared statements can be used to easily mitigate the risk of\nSQL injection.\n",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/sql_injection/introduction/SqlInjectionLesson8.java",
                "start_line": 134,
                "end_line": 138
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-89",
                    "value": "89",
                    "url": "https://cwe.mitre.org/data/definitions/89.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "The input values included in SQL queries need to be passed in safely. Bind\nvariables in prepared statements can be used to easily mitigate the risk of\nSQL injection.\n",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/sql_injection/introduction/SqlInjectionLesson9.java",
                "line_start": 61,
                "line_end": 66
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-89",
                    "value": "89",
                    "url": "https://cwe.mitre.org/data/definitions/89.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "The input values included in SQL queries need to be passed in safely. Bind\nvariables in prepared statements can be used to easily mitigate the risk of\nSQL injection.\n",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/sql_injection/mitigation/Servers.java",
                "line_start": 72
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-89",
                    "value": "89",
                    "url": "https://cwe.mitre.org/data/definitions/89.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "The input values included in SQL queries need to be passed in safely. Bind\nvariables in prepared statements can be used to easily mitigate the risk of\nSQL injection.\n",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/sql_injection/advanced/SqlInjectionLesson6a.java",
                "start_line": 60,
                "end_line": 67
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-89",
                    "value": "89",
                    "url": "https://cwe.mitre.org/data/definitions/89.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "The input values included in SQL queries need to be passed in safely. Bind\nvariables in prepared statements can be used to easily mitigate the risk of\nSQL injection.\n",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/sql_injection/advanced/SqlInjectionChallenge.java",
                "start_line": 63,
                "end_line": 65
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-89",
                    "value": "89",
                    "url": "https://cwe.mitre.org/data/definitions/89.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "A new cookie is created without the HttpOnly flag set. The HttpOnly flag is a directive to the\nbrowser to make sure that the cookie can not be red by malicious script. When a user is the\ntarget of a \"Cross-Site Scripting\", the attacker would benefit greatly from getting the session\nid for example.\n",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignment.java",
                "start_line": 93,
                "end_line": 96
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-1004",
                    "value": "1004",
                    "url": "https://cwe.mitre.org/data/definitions/1004.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "Sensitive data is inappropriatelly encrypted",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignment.java",
                "start_line": 92
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-311",
                    "value": "311",
                    "url": "https://cwe.mitre.org/data/definitions/311.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "A file is opened to read its content. The filename comes from an input parameter. If an\nunfiltered parameter is passed to this file API, files from an arbitrary filesystem location\ncould be read. This rule identifies potential path traversal vulnerabilities. In many cases,\nthe constructed file path cannot be controlled by the user.\n",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/path_traversal/ProfileUploadBase.java",
                "start_line": 43
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-22",
                    "value": "22",
                    "url": "https://cwe.mitre.org/data/definitions/22.html"
                }
            ]
        },
        {
            "category": "sast",
            "message": "Improper Input Validation",
            "description": "The Servlet can read GET and POST parameters from various methods. The\nvalue obtained should be considered unsafe.\"\n",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/path_traversal/ProfileUploadRetrieval.java",
                "start_line": 100
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-20",
                    "value": "20",
                    "url": "https://cwe.mitre.org/data/definitions/20.html"
                }
            ]
        },
        {
            "category": "sast",
            "message": "Improper Input Validation",
            "description": "The Servlet can read GET and POST parameters from various methods. The\nvalue obtained should be considered unsafe.\"\n",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/path_traversal/ProfileUploadRetrieval.java",
                "start_line": 96
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-20",
                    "value": "20",
                    "url": "https://cwe.mitre.org/data/definitions/20.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "The Servlet can read GET and POST parameters from various methods. The\nvalue obtained should be considered unsafe.\"\n",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/path_traversal/ProfileUploadRetrieval.java",
                "start_line": 85,
                "end_line": 86
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-707",
                    "value": "707",
                    "url": "https://cwe.mitre.org/data/definitions/707.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "\"The software uses an HTTP request parameter to construct a pathname that should be within a\nrestricted directory, but it does not properly neutralize absolute path sequences such as\n\"/abs/path\" that can resolve to a location that is outside of that directory. See\nhttp://cwe.mitre.org/data/definitions/36.html for more information.\"\n",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/path_traversal/ProfileUploadRetrieval.java",
                "start_line": 86
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-22",
                    "value": "22",
                    "url": "https://cwe.mitre.org/data/definitions/22.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "This API (java/io/File.\u003cinit\u003e(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/path_traversal/ProfileZipSlip.java",
                "start_line": 47
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-22",
                    "value": "22",
                    "url": "https://cwe.mitre.org/data/definitions/22.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "This API (java/io/File.\u003cinit\u003e(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/path_traversal/ProfileUploadBase.java",
                "start_line": 75
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-22",
                    "value": "22",
                    "url": "https://cwe.mitre.org/data/definitions/22.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "This API (java/io/File.\u003cinit\u003e(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/path_traversal/ProfileUploadBase.java",
                "start_line": 36
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-22",
                    "value": "22",
                    "url": "https://cwe.mitre.org/data/definitions/22.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "This API (java/io/File.\u003cinit\u003e(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input",
            "cve": "",
            "severity": "Medium",
            "confidence": "Medium",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/path_traversal/ProfileZipSlip.java",
                "start_line": 59,
                "end_line": 62
            },
            "identifiers": [
                {
                    "type": "find_sec_bugs_type",
                    "name": "Find Security Bugs-PATH_TRAVERSAL_IN",
                    "value": "PATH_TRAVERSAL_IN",
                    "url": "https://find-sec-bugs.github.io/bugs.htm#PATH_TRAVERSAL_IN"
                },
                {
                    "type": "cwe",
                    "name": "CWE-22",
                    "value": "22",
                    "url": "https://cwe.mitre.org/data/definitions/22.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "Cleartext password transmission over email",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/password_reset/SimpleMailAssignment.java",
                "start_line": 83,
                "end_line": 89
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-319",
                    "value": "319",
                    "url": "https://cwe.mitre.org/data/definitions/319.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "Cryptographic keys should not be kept in the source code. The source code can be widely shared\nin an enterprise environment, and is certainly shared in open source. To be managed safely,\npasswords and secret keys should be stored in separate configuration files or keystores.\n",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/password_reset/ResetLinkAssignment.java",
                "start_line": 54
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-321",
                    "value": "321",
                    "url": "https://cwe.mitre.org/data/definitions/321.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "Logs should not contain sensitive information",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/logging/LogBleedingTask.java",
                "start_line": 50
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-532",
                    "value": "532",
                    "url": "https://cwe.mitre.org/data/definitions/532.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "Cryptographic keys should not be kept in the source code. The source code can be widely shared\nin an enterprise environment, and is certainly shared in open source. To be managed safely,\npasswords and secret keys should be stored in separate configuration files or keystores.\n",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/lesson_template/SampleAttack.java",
                "start_line": 48
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-321",
                    "value": "321",
                    "url": "https://cwe.mitre.org/data/definitions/321.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "The method identified is susceptible to injection. The input should be validated and properly\nescaped.\n",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/jwt/JWTFinalEndpoint.java",
                "start_line": 94
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-89",
                    "value": "89",
                    "url": "https://cwe.mitre.org/data/definitions/89.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "Cryptographic keys should not be kept in the source code. The source code can be widely shared\nin an enterprise environment, and is certainly shared in open source. To be managed safely,\npasswords and secret keys should be stored in separate configuration files or keystores.\n",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java",
                "start_line": 62
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-321",
                    "value": "321",
                    "url": "https://cwe.mitre.org/data/definitions/321.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "Cryptographic keys should not be kept in the source code. The source code can be widely shared\nin an enterprise environment, and is certainly shared in open source. To be managed safely,\npasswords and secret keys should be stored in separate configuration files or keystores.\n",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java",
                "start_line": 61
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-321",
                    "value": "321",
                    "url": "https://cwe.mitre.org/data/definitions/321.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "\"Storing sensitive data in a persistent cookie for an extended period can lead to a breach of\nconfidentiality or account compromise.\"\n",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java",
                "start_line": 105,
                "end_line": 108
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-539",
                    "value": "539",
                    "url": "https://cwe.mitre.org/data/definitions/539.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "Cookie without the secure flag could be sent in clear text if a HTTP URL is visited",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java",
                "start_line": 105,
                "end_line": 108
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-614",
                    "value": "614",
                    "url": "https://cwe.mitre.org/data/definitions/614.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "Cookie without the HttpOnly flag could be read by a malicious script in the browser",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java",
                "start_line": 105,
                "end_line": 108
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-1004",
                    "value": "1004",
                    "url": "https://cwe.mitre.org/data/definitions/1004.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "Unrestricted Spring's RequestMapping makes the method vulnerable to CSRF attacks",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/jwt/JWTSecretKeyEndpoint.java",
                "start_line": 59,
                "end_line": 62
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-352",
                    "value": "352",
                    "url": "https://cwe.mitre.org/data/definitions/352.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "Insufficiently Protected Credentials",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/jwt/JWTSecretKeyEndpoint.java",
                "start_line": 54,
                "end_line": 55
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-522",
                    "value": "522",
                    "url": "https://cwe.mitre.org/data/definitions/522.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "Inadequate encryption strength",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/jwt/JWTSecretKeyEndpoint.java",
                "start_line": 55
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-326",
                    "value": "326",
                    "url": "https://cwe.mitre.org/data/definitions/326.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "Hard coded password found",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/idor/IDORLogin.java",
                "start_line": 52
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-259",
                    "value": "259",
                    "url": "https://cwe.mitre.org/data/definitions/259.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "Hard coded password found",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/idor/IDORLogin.java",
                "start_line": 46
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-259",
                    "value": "259",
                    "url": "https://cwe.mitre.org/data/definitions/259.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "Improper handling of Unicode transformations such as case mapping and normalization.",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/idor/IDOREditOtherProfiile.java",
                "start_line": 58
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-176",
                    "value": "176",
                    "url": "https://cwe.mitre.org/data/definitions/176.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "Improper handling of Unicode transformations such as case mapping and normalization.",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/idor/IDORDiffAttributes.java",
                "start_line": 45
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-176",
                    "value": "176",
                    "url": "https://cwe.mitre.org/data/definitions/176.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "Improper handling of Unicode transformations such as case mapping and normalization.",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/idor/IDORDiffAttributes.java",
                "start_line": 46
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-176",
                    "value": "176",
                    "url": "https://cwe.mitre.org/data/definitions/176.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "Improper handling of Unicode transformations such as case mapping and normalization.",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/idor/IDOREditOtherProfiile.java",
                "start_line": 65
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-176",
                    "value": "176",
                    "url": "https://cwe.mitre.org/data/definitions/176.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "Improper handling of Unicode transformations such as case mapping and normalization.",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/idor/IDOREditOtherProfiile.java",
                "start_line": 72
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-176",
                    "value": "176",
                    "url": "https://cwe.mitre.org/data/definitions/176.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "Unrestricted Spring's RequestMapping makes the method vulnerable to CSRF attacks",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/http_proxies/HttpBasicsInterceptRequest.java",
                "start_line": 44,
                "end_line": 50
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-352",
                    "value": "352",
                    "url": "https://cwe.mitre.org/data/definitions/352.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "Cookie without the HttpOnly flag could be read by a malicious script in the browser",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/hijacksession/HijackSessionAssignment.java",
                "start_line": 86,
                "end_line": 89
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-1004",
                    "value": "1004",
                    "url": "https://cwe.mitre.org/data/definitions/1004.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "This random generator (java.util.Random) is predictable",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/hijacksession/cas/HijackSessionAuthenticationProvider.java",
                "start_line": 51
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-330",
                    "value": "330",
                    "url": "https://cwe.mitre.org/data/definitions/330.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "Object deserialization is used in org.owasp.webgoat.lessons.deserialization.InsecureDeserializationTask.completed(String)",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/deserialization/InsecureDeserializationTask.java",
                "start_line": 56
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-502",
                    "value": "502",
                    "url": "https://cwe.mitre.org/data/definitions/502.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "Object deserialization is used in org.owasp.webgoat.lessons.deserialization.SerializationHelper",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/deserialization/SerializationHelper.java",
                "start_line": 21
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-502",
                    "value": "502",
                    "url": "https://cwe.mitre.org/data/definitions/502.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/resources/lessons/csrf/js/csrf-review.js",
                "start_line": 37,
                "end_line": 41
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-79",
                    "value": "79",
                    "url": "https://cwe.mitre.org/data/definitions/79.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "This random generator (java.util.Random) is predictable",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/cryptography/EncodingAssignment.java",
                "start_line": 52
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-330",
                    "value": "330",
                    "url": "https://cwe.mitre.org/data/definitions/330.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "Unrestricted Spring's RequestMapping makes the method vulnerable to CSRF attacks",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/cryptography/SigningAssignment.java",
                "start_line": 52,
                "end_line": 59
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-352",
                    "value": "352",
                    "url": "https://cwe.mitre.org/data/definitions/352.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "Unrestricted Spring's RequestMapping makes the method vulnerable to CSRF attacks",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java",
                "start_line": 51,
                "end_line": 64
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-352",
                    "value": "352",
                    "url": "https://cwe.mitre.org/data/definitions/352.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "This random generator (java.util.Random) is predictable",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java",
                "start_line": 73
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-330",
                    "value": "330",
                    "url": "https://cwe.mitre.org/data/definitions/330.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "This use of org/slf4j/Logger.warn(Ljava/lang/String;Ljava/lang/Object;)V might be used to include CRLF characters into log messages",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/cryptography/SigningAssignment.java",
                "start_line": 73
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-117",
                    "value": "117",
                    "url": "https://cwe.mitre.org/data/definitions/117.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "This API MD5 (MDX) is not a recommended cryptographic hash function",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java",
                "start_line": 56
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-328",
                    "value": "328",
                    "url": "https://cwe.mitre.org/data/definitions/328.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "Unrestricted Spring's RequestMapping makes the method vulnerable to CSRF attacks",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java",
                "start_line": 71,
                "end_line": 78
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-352",
                    "value": "352",
                    "url": "https://cwe.mitre.org/data/definitions/352.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "Unsafe comparison of hash that are susceptible to timing attack",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java",
                "start_line": 89,
                "end_line": 90
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-203",
                    "value": "203",
                    "url": "https://cwe.mitre.org/data/definitions/203.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "Unsafe comparison of hash that are susceptible to timing attack",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java",
                "start_line": 94,
                "end_line": 95
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-203",
                    "value": "203",
                    "url": "https://cwe.mitre.org/data/definitions/203.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "This random generator (java.util.Random) is predictable",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java",
                "start_line": 54
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-330",
                    "value": "330",
                    "url": "https://cwe.mitre.org/data/definitions/330.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "Improper handling of Unicode transformations such as case mapping and normalization.",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/cryptography/SigningAssignment.java",
                "start_line": 72
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-176",
                    "value": "176",
                    "url": "https://cwe.mitre.org/data/definitions/176.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "Improper handling of Unicode transformations such as case mapping and normalization.",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/cryptography/CryptoUtil.java",
                "start_line": 116
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-176",
                    "value": "176",
                    "url": "https://cwe.mitre.org/data/definitions/176.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "The application mixes trusted and untrusted data in session attributes.",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/cryptography/SigningAssignment.java",
                "start_line": 54
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-501",
                    "value": "501",
                    "url": "https://cwe.mitre.org/data/definitions/501.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "The application mixes trusted and untrusted data in session attributes.",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/cryptography/SigningAssignment.java",
                "start_line": 55
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-501",
                    "value": "501",
                    "url": "https://cwe.mitre.org/data/definitions/501.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "Improper handling of Unicode transformations such as case mapping and normalization.",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/cryptography/SecureDefaultsAssignment.java",
                "start_line": 43
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-176",
                    "value": "176",
                    "url": "https://cwe.mitre.org/data/definitions/176.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "The application mixes trusted and untrusted data in session attributes.",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/cryptography/EncodingAssignment.java",
                "start_line": 53,
                "end_line": 54
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-501",
                    "value": "501",
                    "url": "https://cwe.mitre.org/data/definitions/501.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "The application mixes trusted and untrusted data in session attributes.",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java",
                "start_line": 57
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-501",
                    "value": "501",
                    "url": "https://cwe.mitre.org/data/definitions/501.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "This use of org/slf4j/Logger.info(Ljava/lang/String;Ljava/lang/Object;)V might be used to include CRLF characters into log messages",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/cryptography/CryptoUtil.java",
                "start_line": 60,
                "end_line": 62
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-117",
                    "value": "117",
                    "url": "https://cwe.mitre.org/data/definitions/117.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "A trust boundary can be thought of as line drawn through a program. On one side\nof the line, data is untrusted. On the other side of the line, data is assumed\nto be trustworthy. The purpose of validation logic is to allow data to safely\ncross the trust boundary - to move from untrusted to trusted. A trust boundary\nviolation occurs when a program blurs the line between what is trusted and what\nis u",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java",
                "start_line": 75
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-501",
                    "value": "501",
                    "url": "https://cwe.mitre.org/data/definitions/501.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "A trust boundary can be thought of as line drawn through a program. On one side\nof the line, data is untrusted. On the other side of the line, data is assumed\nto be trustworthy. The purpose of validation logic is to allow data to safely\ncross the trust boundary - to move from untrusted to trusted. A trust boundary\nviolation occurs when a program blurs the line between what is trusted and what\nis u",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java",
                "start_line": 76
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-501",
                    "value": "501",
                    "url": "https://cwe.mitre.org/data/definitions/501.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "A trust boundary can be thought of as line drawn through a program. On one side\nof the line, data is untrusted. On the other side of the line, data is assumed\nto be trustworthy. The purpose of validation logic is to allow data to safely\ncross the trust boundary - to move from untrusted to trusted. A trust boundary\nviolation occurs when a program blurs the line between what is trusted and what\nis u",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java",
                "start_line": 62
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-501",
                    "value": "501",
                    "url": "https://cwe.mitre.org/data/definitions/501.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "A trust boundary can be thought of as line drawn through a program. On one side\nof the line, data is untrusted. On the other side of the line, data is assumed\nto be trustworthy. The purpose of validation logic is to allow data to safely\ncross the trust boundary - to move from untrusted to trusted. A trust boundary\nviolation occurs when a program blurs the line between what is trusted and what\nis u",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java",
                "start_line": 61
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-501",
                    "value": "501",
                    "url": "https://cwe.mitre.org/data/definitions/501.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "A trust boundary can be thought of as line drawn through a program. On one side\nof the line, data is untrusted. On the other side of the line, data is assumed\nto be trustworthy. The purpose of validation logic is to allow data to safely\ncross the trust boundary - to move from untrusted to trusted. A trust boundary\nviolation occurs when a program blurs the line between what is trusted and what\nis u",
            "cve": "",
            "severity": "Medium",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/cryptography/SigningAssignment.java",
                "start_line": 56
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-501",
                    "value": "501",
                    "url": "https://cwe.mitre.org/data/definitions/501.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "This API (java/io/File.\u003cinit\u003e(Ljava/lang/String;)V) reads a file whose location might be specified by user input",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/MD5.java",
                "start_line": 54
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-22",
                    "value": "22",
                    "url": "https://cwe.mitre.org/data/definitions/22.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "This random generator (java.util.Random) is predictable",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/PasswordResetLink.java",
                "start_line": 14
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-330",
                    "value": "330",
                    "url": "https://cwe.mitre.org/data/definitions/330.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "Improper handling of Unicode transformations such as case mapping and normalization.",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/PasswordResetLink.java",
                "start_line": 15
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-176",
                    "value": "176",
                    "url": "https://cwe.mitre.org/data/definitions/176.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "The method identified is susceptible to injection. The input should be validated and properly\nescaped.\n",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java",
                "start_line": 59
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-89",
                    "value": "89",
                    "url": "https://cwe.mitre.org/data/definitions/89.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "Unrestricted Spring's RequestMapping makes the method vulnerable to CSRF attacks",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/challenges/challenge1/ImageServlet.java",
                "start_line": 25,
                "end_line": 34
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-352",
                    "value": "352",
                    "url": "https://cwe.mitre.org/data/definitions/352.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "Request header can easily be altered by the client",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/challenges/challenge1/Assignment1.java",
                "start_line": 62
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-20",
                    "value": "20",
                    "url": "https://cwe.mitre.org/data/definitions/20.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "Cryptographic keys should not be kept in the source code. The source code can be widely shared\nin an enterprise environment, and is certainly shared in open source. To be managed safely,\npasswords and secret keys should be stored in separate configuration files or keystores.\n",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/challenges/SolutionConstants.java",
                "start_line": 34,
                "end_line": 36
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-321",
                    "value": "321",
                    "url": "https://cwe.mitre.org/data/definitions/321.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "The Servlet can read GET and POST parameters from various methods. The value obtained should be\nconsidered unsafe. You may need to validate or sanitize those values before passing them to\nsensitive APIs\n",
            "cve": "",
            "severity": "Medium",
            "scanner": {
                "id": "semgrep",
                "name": "Semgrep"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/auth_bypass/VerifyAccount.java",
                "start_line": 89
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-20",
                    "value": "20",
                    "url": "https://cwe.mitre.org/data/definitions/20.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "Cryptographic keys should not be kept in the source code. The source code can be widely shared\nin an enterprise environment, and is certainly shared in open source. To be managed safely,\npasswords and secret keys should be stored in separate configuration files or keystores.\n",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/missing_ac/MissingFunctionAC.java",
                "start_line": 32
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-321",
                    "value": "321",
                    "url": "https://cwe.mitre.org/data/definitions/321.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "Cryptographic keys should not be kept in the source code. The source code can be widely shared\nin an enterprise environment, and is certainly shared in open source. To be managed safely,\npasswords and secret keys should be stored in separate configuration files or keystores.\n",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/java/org/owasp/webgoat/lessons/missing_ac/MissingFunctionAC.java",
                "start_line": 33
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-321",
                    "value": "321",
                    "url": "https://cwe.mitre.org/data/definitions/321.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "Inappropriate implementation of access control",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "WebGoat/src/main/resources/lessons/missing_ac/html/MissingFunctionAC.html",
                "start_line": 37,
                "end_line": 44
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-284",
                    "value": "284",
                    "url": "https://cwe.mitre.org/data/definitions/284.html"
                }
            ]
        }
    ]
}