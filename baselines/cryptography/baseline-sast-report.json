{
    "vulnerabilities": [
        {
            "category": "sast",
            "description": "This random generator (java.util.Random) is predictable",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "src/main/java/org/owasp/webgoat/lessons/cryptography/EncodingAssignment.java",
                "start_line": 52
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-330",
                    "value": "330",
                    "url": "https://cwe.mitre.org/data/definitions/330.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "Unrestricted Spring's RequestMapping makes the method vulnerable to CSRF attacks",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "src/main/java/org/owasp/webgoat/lessons/cryptography/SigningAssignment.java",
                "start_line": 52,
                "end_line": 59
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-352",
                    "value": "352",
                    "url": "https://cwe.mitre.org/data/definitions/352.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "Unrestricted Spring's RequestMapping makes the method vulnerable to CSRF attacks",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java",
                "start_line": 51,
                "end_line": 64
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-352",
                    "value": "352",
                    "url": "https://cwe.mitre.org/data/definitions/352.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "This random generator (java.util.Random) is predictable",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java",
                "start_line": 73
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-330",
                    "value": "330",
                    "url": "https://cwe.mitre.org/data/definitions/330.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "This use of org/slf4j/Logger.warn(Ljava/lang/String;Ljava/lang/Object;)V might be used to include CRLF characters into log messages",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "src/main/java/org/owasp/webgoat/lessons/cryptography/SigningAssignment.java",
                "start_line": 73
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-117",
                    "value": "117",
                    "url": "https://cwe.mitre.org/data/definitions/117.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "This API MD5 (MDX) is not a recommended cryptographic hash function",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java",
                "start_line": 56
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-328",
                    "value": "328",
                    "url": "https://cwe.mitre.org/data/definitions/328.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "Unrestricted Spring's RequestMapping makes the method vulnerable to CSRF attacks",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java",
                "start_line": 71,
                "end_line": 78
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-352",
                    "value": "352",
                    "url": "https://cwe.mitre.org/data/definitions/352.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "Unsafe comparison of hash that are susceptible to timing attack",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java",
                "start_line": 89,
                "end_line": 90
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-203",
                    "value": "203",
                    "url": "https://cwe.mitre.org/data/definitions/203.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "Unsafe comparison of hash that are susceptible to timing attack",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java",
                "start_line": 94,
                "end_line": 95
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-203",
                    "value": "203",
                    "url": "https://cwe.mitre.org/data/definitions/203.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "This random generator (java.util.Random) is predictable",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java",
                "start_line": 54
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-330",
                    "value": "330",
                    "url": "https://cwe.mitre.org/data/definitions/330.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "Improper handling of Unicode transformations such as case mapping and normalization.",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "src/main/java/org/owasp/webgoat/lessons/cryptography/SigningAssignment.java",
                "start_line": 72
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-176",
                    "value": "176",
                    "url": "https://cwe.mitre.org/data/definitions/176.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "Improper handling of Unicode transformations such as case mapping and normalization.",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "src/main/java/org/owasp/webgoat/lessons/cryptography/CryptoUtil.java",
                "start_line": 116
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-176",
                    "value": "176",
                    "url": "https://cwe.mitre.org/data/definitions/176.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "The application mixes trusted and untrusted data in session attributes.",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "src/main/java/org/owasp/webgoat/lessons/cryptography/SigningAssignment.java",
                "start_line": 54
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-501",
                    "value": "501",
                    "url": "https://cwe.mitre.org/data/definitions/501.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "The application mixes trusted and untrusted data in session attributes.",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "src/main/java/org/owasp/webgoat/lessons/cryptography/SigningAssignment.java",
                "start_line": 55
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-501",
                    "value": "501",
                    "url": "https://cwe.mitre.org/data/definitions/501.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "Improper handling of Unicode transformations such as case mapping and normalization.",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "src/main/java/org/owasp/webgoat/lessons/cryptography/SecureDefaultsAssignment.java",
                "start_line": 43
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-176",
                    "value": "176",
                    "url": "https://cwe.mitre.org/data/definitions/176.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "The application mixes trusted and untrusted data in session attributes.",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "src/main/java/org/owasp/webgoat/lessons/cryptography/EncodingAssignment.java",
                "start_line": 53,
                "end_line": 54
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-501",
                    "value": "501",
                    "url": "https://cwe.mitre.org/data/definitions/501.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "The application mixes trusted and untrusted data in session attributes.",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java",
                "start_line": 57
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-501",
                    "value": "501",
                    "url": "https://cwe.mitre.org/data/definitions/501.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "This use of org/slf4j/Logger.info(Ljava/lang/String;Ljava/lang/Object;)V might be used to include CRLF characters into log messages",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "src/main/java/org/owasp/webgoat/lessons/cryptography/CryptoUtil.java",
                "start_line": 60,
                "end_line": 62
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-117",
                    "value": "117",
                    "url": "https://cwe.mitre.org/data/definitions/117.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "A trust boundary can be thought of as line drawn through a program. On one side\nof the line, data is untrusted. On the other side of the line, data is assumed\nto be trustworthy. The purpose of validation logic is to allow data to safely\ncross the trust boundary - to move from untrusted to trusted. A trust boundary\nviolation occurs when a program blurs the line between what is trusted and what\nis u",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java",
                "start_line": 75
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-501",
                    "value": "501",
                    "url": "https://cwe.mitre.org/data/definitions/501.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "A trust boundary can be thought of as line drawn through a program. On one side\nof the line, data is untrusted. On the other side of the line, data is assumed\nto be trustworthy. The purpose of validation logic is to allow data to safely\ncross the trust boundary - to move from untrusted to trusted. A trust boundary\nviolation occurs when a program blurs the line between what is trusted and what\nis u",
            "cve": "",
            "scanner": {
                "id": "baseline",
                "name": "baseline"
            },
            "location": {
                "file": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java",
                "start_line": 76
            },
            "identifiers": [
                {
                    "type": "cwe",
                    "name": "CWE-501",
                    "value": "501",
                    "url": "https://cwe.mitre.org/data/definitions/501.html"
                }
            ]
        },
        {
            "category": "sast",
            "description": "A trust boundary can be thought of as line drawn through a program. On one side\nof the line, data is untrusted. On the other side of the line, data is assumed\nto be trustworthy. The purpose of validation logic is to allow data to safely\ncross the trust boundary - to move from untrusted to trusted. A trust boundary\nviolation occurs when a program blurs the line between what is trusted and what\nis u",
            "cve": "",
            "scanner": {
              "id": "baseline",
              "name": "baseline"
            },
            "location": {
              "file": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java",
              "start_line": 62
            },
            "identifiers": [
              {
                "type": "cwe",
                "name": "CWE-501",
                "value": "501",
                "url": "https://cwe.mitre.org/data/definitions/501.html"
              }
            ]
        },
        {
            "category": "sast",
            "description": "A trust boundary can be thought of as line drawn through a program. On one side\nof the line, data is untrusted. On the other side of the line, data is assumed\nto be trustworthy. The purpose of validation logic is to allow data to safely\ncross the trust boundary - to move from untrusted to trusted. A trust boundary\nviolation occurs when a program blurs the line between what is trusted and what\nis u",
            "cve": "",
            "scanner": {
              "id": "baseline",
              "name": "baseline"
            },
            "location": {
              "file": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java",
              "start_line": 61
            },
            "identifiers": [
              {
                "type": "cwe",
                "name": "CWE-501",
                "value": "501",
                "url": "https://cwe.mitre.org/data/definitions/501.html"
              }
            ]
        },
        {
            "category": "sast",
            "description": "A trust boundary can be thought of as line drawn through a program. On one side\nof the line, data is untrusted. On the other side of the line, data is assumed\nto be trustworthy. The purpose of validation logic is to allow data to safely\ncross the trust boundary - to move from untrusted to trusted. A trust boundary\nviolation occurs when a program blurs the line between what is trusted and what\nis u",
            "cve": "",
            "severity": "Medium",
            "scanner": {
              "id": "baseline",
              "name": "baseline"
            },
            "location": {
              "file": "src/main/java/org/owasp/webgoat/lessons/cryptography/SigningAssignment.java",
              "start_line": 56
            },
            "identifiers": [
              {
                "type": "cwe",
                "name": "CWE-501",
                "value": "501",
                "url": "https://cwe.mitre.org/data/definitions/501.html"
              }
            ]
          }
    ]
}